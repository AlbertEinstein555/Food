{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iEAAe,UAAU;;;;;;;;;;;;;;;AChKuB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU,MAAM,SAAS;AACxC,sCAAsC,WAAW;AACjD,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+DAAW;AACZ;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACvEpB;AACA;AACA;AACA,CAAiD;AACjD;AACA;AACA,CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4DAAQ;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kDAAU;AACb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3GrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iEAAe,KAAK,EAAC;AACtB;AACA,CAAuB;AACvB;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA,kBAAkB,qEAAqE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC,iEAAe,MAAM;;;;;;;;;;;;;;ACxJtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC/DnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iEAAe,KAAK;;;;;;;;;;;;;;;AC5ErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,IAAI,YAAY,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,CAAmB;AACnB;;;;;;UChCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA,CAAmC;AACnC,CAAqC;AACrC,CAAqC;AACrC,CAAqC;AACrC,CAA+C;AAC/C,CAAqC;AACrC,CAAuC;AACvC,CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,wCAAwC,yDAAS;AACjD;AACA;AACA;AACA,CAAC,yDAAI;AACL;AACA;AACA;AACA;AACA,CAAC,0DAAK;AACN;AACA,CAAC,0DAAK;AACN,CAAC,0DAAK;AACN,CAAC,+DAAU;AACX;AACA,CAAC,0DAAK;AACN;AACA;AACA,CAAC,2DAAM;AACP;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA","sources":["webpack://food/./js/modules/calculator.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["//Calculator\r\nfunction calculator() {\r\n\t//получаем элемент, в который будем все записывать\r\n\tconst result = document.querySelector('.calculating__result span');\r\n\t//в расчете будет участвовать 5 элементов, которые будут меняться\r\n\t//зададим дефолтное значение пола человека и его степени активности\r\n\tlet sex, height, weight, age, ratio;\r\n\t//проверяем, есть ли значения в локальном хранилище и если да, то подставим их в переменные\r\n\t//если нет, то зададим значения по умолчанию\r\n\tif (localStorage.getItem('sex')) {\r\n\t\tsex = localStorage.getItem('sex');\r\n\t} else {\r\n\t\tsex = 'female';\r\n\t\tlocalStorage.setItem('sex', 'female');\r\n\t}\r\n\r\n\tif (localStorage.getItem('ratio')) {\r\n\t\tratio = localStorage.getItem('ratio');\r\n\t} else {\r\n\t\tratio = 1.375;\r\n\t\tlocalStorage.setItem('ratio', 1.375);\r\n\t}\r\n\r\n\t//создадим функцию, которая будет сохранять классы активности последних выбранных элементов при обновлении страницы\r\n\tfunction initLocalSettings(selector, activeClass) {\r\n\t\tconst elements = document.querySelectorAll(selector);\r\n\t\t//при заходе на страницу убираем у наших элементов классы активности и добавляем их тем, которые есть в локальном хранилище\r\n\t\telements.forEach(elem => {\r\n\t\t\t//убираем класс активности\r\n\t\t\telem.classList.remove(activeClass);\r\n\t\t\t//для элементов пола сравниваем по id\r\n\t\t\tif (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n\t\t\t\t//добавляем класс активности, если в результате перебора элементов находим совпадение в локальном хранилище\r\n\t\t\t\telem.classList.add(activeClass);\r\n\t\t\t}\r\n\t\t\t//аналогично для элементов активности сравниваем по data-ratio\r\n\t\t\tif (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n\t\t\t\t//добавляем класс активности, если в результате перебора элементов находим совпадение в локальном хранилище\r\n\t\t\t\telem.classList.add(activeClass);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t//вызываем функцию\r\n\t//добавим div так как обращаемся к элементу внутри селектора\r\n\tinitLocalSettings('#gender div', 'calculating__choose-item_active');\r\n\tinitLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\t//разбиваем функционал калькулятора на несколько частей, так как что-то будет меняться, а что-то нет\r\n\t//создадим ф-ию, которая будет запускаться каждый раз, когда выполняется какое-то изменение, то есть выполнять пересчет\r\n\tfunction calcTotal() {\r\n\t\t//если нет значения, для хотя бы одной переменной, то калькулятор не работает\r\n\t\t//эта проверка также подразумевает недопустимость ввода букв или символов\r\n\t\tif (!sex || !height || !weight || !age || !ratio) {\r\n\t\t\tresult.textContent = 'Не хватает данных';\r\n\t\t\t//если ввели данные в инпут, а потом удалили, то сбрасываем стили \r\n\t\t\tresult.style.cssText = '';\r\n\t\t\t//досрочно прервем функцию\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//если все в порядке, то в зависимости от выбранного пола берем формулу из статьи и подставляем наши переменные\r\n\t\tif (sex === 'female') {\r\n\t\t\t//расчет округлим до ближайшего целого\r\n\t\t\tresult.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n\t\t\tresult.style.cssText = `\r\n\t\t\tfont-size: 30px;\r\n\t\t\tcolor: violet;\r\n\t\t\ttext-align: center;\r\n\t\t`;\r\n\t\t} else {\r\n\t\t\t//расчет округлим до ближайшего целого\r\n\t\t\tresult.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n\t\t\tresult.style.cssText = `\r\n\t\t\tfont-size: 30px;\r\n\t\t\tcolor: green;\r\n\t\t\ttext-align: center;\r\n\t\t`;\r\n\t\t}\r\n\t}\r\n\t//вызовем функцию\r\n\tcalcTotal();\r\n\t//напишем функцию, которая будет отвечать за переключение между элементами\r\n\tfunction getStaticInformation(Selector, activeClass) {\r\n\t\t//получим элементы внутри блока\r\n\t\tconst elements = document.querySelectorAll(`${Selector}`);\r\n\t\t//\r\n\t\telements.forEach(elem => {\r\n\t\t\t//отслеживаем клики по элементу, игнорируя клики по подложке\r\n\t\t\telem.addEventListener('click', (e) => {\r\n\t\t\t\t//для определения по чем кликнул пользователь пропишем условие,\r\n\t\t\t\t//опираясь на data-atribut или id, которые добавим в верстку\r\n\t\t\t\t//если есть data-ratio, то извлекаем его значение\r\n\t\t\t\tif (e.target.getAttribute('data-ratio')) {\r\n\t\t\t\t\tratio = +e.target.getAttribute('data-ratio');\r\n\t\t\t\t\t//запомним последние введенные данные и запишем их в локальное хранилище\r\n\t\t\t\t\tlocalStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsex = e.target.getAttribute('id');\r\n\t\t\t\t\tlocalStorage.setItem('sex', e.target.getAttribute('id'));\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(ratio, sex);\r\n\t\t\t\t//работаем с классами активности\r\n\t\t\t\t//обращаемся к элементам \r\n\t\t\t\t//убираем у всех класс активности \r\n\t\t\t\telements.forEach(elem => {\r\n\t\t\t\t\telem.classList.remove(activeClass);\r\n\t\t\t\t});\r\n\t\t\t\t// и добавляем тому div, в который кликнули, назначаем класс активности\r\n\t\t\t\te.target.classList.add(activeClass);\r\n\t\t\t\t//выполняем пересчет\r\n\t\t\t\tcalcTotal();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t//вызываем функцию с родителем и классом активности\r\n\t//добавим div так как обращаемся к элементу внутри селектора\r\n\tgetStaticInformation('#gender div', 'calculating__choose-item_active');\r\n\tgetStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\t//создадим функцию, которая будет навешиваться на input\r\n\tfunction getDynamicInformation(selector) {\r\n\t\t//получаем input, с которым будем работать\r\n\t\tconst input = document.querySelector(selector);\r\n\t\tinput.addEventListener('input', () => {\r\n\r\n\t\t\t//проверяем, что пользователь ввел в инпут и подсвечиваем инпут красным, если данные некорректные\r\n\t\t\t//регулярное выражение /\\D/g будет искать все символы в строке, которые не являются цифрами\r\n\t\t\tif (input.value.match(/\\D/g)) {\r\n\t\t\t\tinput.style.border = '1px solid red';\r\n\t\t\t} else {\r\n\t\t\t\tinput.style.border = 'none';\r\n\t\t\t}\r\n\r\n\t\t\tswitch (input.getAttribute('id')) {\r\n\t\t\t\t//проверяем input по id на строку\r\n\t\t\t\tcase 'height':\r\n\t\t\t\t\t//если это искомый input, то записываем в переменную введенные пользователем данные\r\n\t\t\t\t\t//при этом преобразуем значение в числовой тип данных\r\n\t\t\t\t\theight = +input.value;\r\n\t\t\t\t\t//останавливаем наш case\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'weight':\r\n\t\t\t\t\t//если это искомый input, то записываем в переменную введенные пользователем данные\r\n\t\t\t\t\tweight = +input.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'age':\r\n\t\t\t\t\t//если это искомый input, то записываем в переменную введенные пользователем данные\r\n\t\t\t\t\tage = +input.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//выполняем пересчет\r\n\t\t\tcalcTotal();\r\n\t\t});\r\n\t}\r\n\t//вызовем функцию с тремя селекторами\r\n\tgetDynamicInformation('#height');\r\n\tgetDynamicInformation('#weight');\r\n\tgetDynamicInformation('#age');\r\n}\r\n\t\r\n\r\n\t//экспортируем эту функцию в стандартах ES6\r\n\texport default calculator;","import {getResource} from \"../services/services\";\r\nfunction cards() {\r\n\t//Используем классы для карточек\r\n\t//название класса всегда с большой буквы\r\n\tclass MenuCard {\r\n\t\t//берем из верстки все то, что нам нужно для шаблона\r\n\t\t//alt - альтернативный текст, если картинка сломалась\r\n\t\t//используем rest оператор ...\r\n\t\tconstructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n\t\t\tthis.src = src;\r\n\t\t\tthis.alt = alt;\r\n\t\t\tthis.title = title;\r\n\t\t\tthis.descr = descr;\r\n\t\t\tthis.price = price;\r\n\t\t\tthis.classes = classes;\r\n\t\t\tthis.parent = document.querySelector(parentSelector);\r\n\t\t\t//курс валют\r\n\t\t\tthis.transfer = 27;\r\n\t\t\t//вызовем метод конвертации валют\r\n\t\t\tthis.changeToUAH();\r\n\t\t}\r\n\t\t//создадим метод по конвертации валют\r\n\t\tchangeToUAH() {\r\n\t\t\tthis.price = this.price * this.transfer;\r\n\t\t}\r\n\t\t//метод для создания верстки\r\n\t\trender() {\r\n\t\t\t//создадим элемент\r\n\t\t\t//поместим в него верстку\r\n\t\t\t//дополним данными, которые приходят как аргументы\r\n\t\t\t//поместим на страницу\r\n\t\t\tconst element = document.createElement('div');\r\n\t\t\t//зададим параметры по умолчанию, если пользователь не передаст ни 1 элемента в классы\r\n\t\t\tif (this.classes.length === 0) {\r\n\t\t\t\tthis.classes = \"menu__item\";\r\n\t\t\t\telement.classList.add(this.classes);\r\n\t\t\t} else {\r\n\t\t\t\t//так как classes - массив, то обработаем его, про\tдемся по каждому элементу, \r\n\t\t\t\t//вытащим название класса и подсоеденим к div\r\n\t\t\t\tthis.classes.forEach(className => element.classList.add(className));\r\n\t\t\t}\r\n\t\t\t//скопируем верстку и отредактируем то, что может меняться\r\n\t\t\t//уберем обертку menu__item\r\n\t\t\telement.innerHTML = `\r\n\t\t\t\t<img src=${this.src} alt=${this.alt}>\r\n\t\t\t\t<h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n\t\t\t\t<div class=\"menu__item-descr\">${this.descr}</div>\r\n\t\t\t\t<div class=\"menu__item-divider\"></div>\r\n\t\t\t\t<div class=\"menu__item-price\">\r\n\t\t\t\t\t<div class=\"menu__item-cost\">Цена:</div>\r\n\t\t\t\t\t<div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\t\t\t//поместим новосозданный элемент во внутрь родителя\r\n\t\t\tthis.parent.append(element);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//при помощи сервера получаем массив с menu\r\n\tgetResource('http://localhost:3000/menu')\r\n\t\t.then(data => {\r\n\t\t\t//переберем массив и выполним деструктуризацию объекта внутри него при помощи {}\r\n\t\t\tdata.forEach(({ img, altimg, title, descr, price }) => {\r\n\t\t\t\t//передаем эти части вовнутрь конструктора, который создает\r\n\t\t\t\tnew MenuCard(img, altimg, title, descr, price, \".menu .container\").render();\r\n\t\t\t});\r\n\t\t})\r\n}\r\n\r\n//экспортируем эту функцию в стандартах ES6\r\nexport default cards;","\t//Forms - эта часть будет видна и будет полноценно работать, если запустить ее в open server и включить JSON-server\r\n\t//Импорты всегда должны быть в самом верху\r\n\t//Используем синтаксис именованных импортов, чтобы использовать функции из модуля modal\r\n\timport { closeModal, openModal } from \"./modal\";\r\n\t//функция postData находится в файле services\r\n\t//в пути выходим на одну папку выше и заходим в нужную\r\n\timport {postData} from \"../services/services\";\r\n\r\n\tfunction forms(formSelector, modalTimerId) {\r\n\t\t//получим все формы на странице по тегу\r\n\tconst forms = document.querySelectorAll(formSelector);\r\n\r\n\t//создадим сообщение о результате\r\n\tconst message = {\r\n\t\t//подставим картинку на загрузку\r\n\t\tloading: 'img/form/spinner.svg',\r\n\t\tsuccess: 'Спасибо! Скоро мы с вами свяжемся',\r\n\t\tfailure: 'Что-то пошло не так...'\r\n\t};\r\n\r\n\t//подвяжем функцию на каждую форму, которая будет обработчиком события при отправке\r\n\tforms.forEach(item => {\r\n\t\tbindPostData(item);\r\n\t});\r\n\r\n\r\n\r\n\t//пропишем функцию, отвечающую за привязку постинга данных\t\r\n\tfunction bindPostData(form) {\r\n\t\t//событие будет срабатывать каждый раз, когда пытаемся отправить какую-то форму\r\n\t\tform.addEventListener('submit', (e) => {\r\n\t\t\t//в самом начале отменим стандартное поведение браузера, чтобы он не перезагружался\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t//Создадим блок, в который будет помещаться сообщение о результате\r\n\t\t\tlet statusMessage = document.createElement('img');\r\n\t\t\tstatusMessage.src = message.loading;\r\n\t\t\t//показываем сообщение\r\n\t\t\tstatusMessage.style.cssText = `\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: 0 auto;\r\n\t   \t`;\r\n\t\t\t//отправим statusMessage на страницу\r\n\t\t\tform.insertAdjacentElement('afterend', statusMessage);\r\n\r\n\t\t\t//создадим функцию-конструктор, в которую будут помещены все данные, заполненные пользователем\r\n\t\t\t//в верстке всегда проверяем атрибут name у input\r\n\t\t\t//при связке XMLHttpRequest и Formdata заголовок request.setRequestHeader пропишется автоматически\r\n\t\t\t//а для JSON понадобится заголовок\r\n\t\t\tconst formData = new FormData(form);\r\n\t\t\t//превратим formData в массив массивов, чтобы поработать с ней, превращаем в объект и в формат JSON\r\n\t\t\t//stringify превращает обычный объект в JSON\r\n\t\t\tconst json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\t\t\t//из postData вернется promise, который обработаем при помощи then и отправим json на сервер\r\n\t\t\tpostData('http://localhost:3000/requests', json)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\t//data - данные, которые возвращаются из промиса\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t//в случае успешного запроса помещаем другое сообщение\r\n\t\t\t\t\tshowThanksModal(message.success);\r\n\t\t\t\t\t//удаляем блок со страницы\r\n\t\t\t\t\tstatusMessage.remove();\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\tshowThanksModal(message.failure);\r\n\t\t\t\t}).finally(() => {\r\n\t\t\t\t\tform.reset();\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\t//говорим спасибо при закрытии модального окна\r\n\tfunction showThanksModal(message) {\r\n\t\tconst prevModalDialog = document.querySelector('.modal__dialog');\r\n\t\t//скрываем элемент перед показом модального окна при помощи стилей\r\n\t\tprevModalDialog.classList.add('hide')\r\n\t\t//когда вызывается showTanksModal, то внутри подвязывается openModal, которая отвечает за открытие модальных окон\r\n\t\topenModal('.modal');\r\n\r\n\t\t//создаем новый контент\r\n\t\tconst thanksModal = document.createElement('div');\r\n\t\tthanksModal.classList.add('modal__dialog');\r\n\t\t//формируем верстку в этом модальном окне\r\n\t\tthanksModal.innerHTML = `\r\n\t\t<div class=\"modal__content\">\r\n\t\t\t<div class=\"modal__close\" data-close>×</div>\r\n\t\t\t<div class=\"modal__title\">${message}</div>\r\n\t\t</div>\r\n   \t`;\r\n\t\tdocument.querySelector('.modal').append(thanksModal);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthanksModal.remove();\r\n\t\t\tprevModalDialog.classList.add('show');\r\n\t\t\tprevModalDialog.classList.remove('hide');\r\n\t\t\t//передаем селектор модального окна, которое будем закывать\r\n\t\t\tcloseModal('.modal', modalTimerId);\r\n\t\t}, 4000);\r\n\t}\r\n\r\n\t//загружаем файл 'db.json', преобразует его содержимое в формат JSON и выводит его в консоль\r\n\t//подставим скопированный адресс\r\n\tfetch('http://localhost:3000/menu')\r\n\t\t.then(data => data.json())\r\n\t\t.then(res => console.log(res));\r\n\t}\r\n\r\n\t\r\n\r\n\t//экспортируем эту функцию в стандартах ES6\r\n\texport default forms;","\t//Modal\r\n\t//напишем функции, отвечающую за открытие и закрытие окна\r\n\t//пишем их в начале, чтобы они работали как отдельные функциональности\t\r\n\t//создадим функцию, так как имеем повторяющийся участок кода\r\n\t//используем селекторы, когда будем вызывать функцию modal. Функция будет определять элемент и работать с ним\r\n\tfunction closeModal(modalSelector) {\r\n\t\tconst modal = document.querySelector(modalSelector);\r\n\t\tif (modal) {\r\n\t\t\tmodal.classList.add('hide');\r\n\t\tmodal.classList.remove('show');\r\n\t\t//добавим возможность скролла страницы при вызове окна\r\n\t\t//оставим пустую строку и браузер поставит значение по умолчанию\r\n\t\tdocument.body.style.overflow = '';\r\n\t\t}\r\n\t}\r\n\t//передаем в качестве аргументов селектор модального окна и уникальный идентификатор таймера, который был запущен\r\n\tfunction openModal(modalSelector, modalTimerId) {\r\n\t\tconst modal = document.querySelector(modalSelector);\r\n\t\tif (modal) {\r\n\t\t\tmodal.classList.add('show');\r\n\t\tmodal.classList.remove('hide');\r\n\t\t//уберем возможность скролла страницы при вызове окна\r\n\t\tdocument.body.style.overflow = 'hidden';\r\n\t\tconsole.log(modalTimerId);\r\n\t\t//если modalTimerId существует, то будем запускать clearInterval\r\n\t\tif (modalTimerId) {\r\n\t\t\t\t//очистим интервал появления модального окна, если оно уже было открыто пользователем\r\n\t\t\t\tclearInterval(modalTimerId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//передаем modalTimerId (который будет приходить из script.js) везде где будет функция openModal внутри функции modal\r\n\tfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n\t\t//используем data-атрибуты из html. Пишем их в квадратных скобках\r\n\t\t//переменная для кнопок модального окна\r\n\t\tconst modalTrigger = document.querySelectorAll(triggerSelector),\r\n\t\t\t\t//переменная, отвечающая за модальное окно\r\n\t\t\t\tmodal = document.querySelector(modalSelector),\r\n\t\t\t\t//переменая для кнопки, отвечающей за закрытие модального окна\r\n\t\t\t\tmodalCloseBtn = document.querySelector('[data-close]');\r\n\r\n\t\t//используем функцию, отвечающую за открытие окна\r\n\t\t//переберем псевдомассив, чтобы навесить на него обработчик событий\t\t\r\n\t\tmodalTrigger.forEach(btn => {\r\n\t\t\t//создадим стрелочную функцию, которая оборачивает вызывающуюся функцию и будет ее вызывать внутри себя\r\n\t\t\tbtn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n\t\t});\r\n\r\n\t\t//создадим функцию, отвечающую за закрытие окна\t\t\r\n\t\t// Добавляем обработчик события для кнопки закрытия модального окна\r\n\t\tif (modalCloseBtn) {\r\n\t\t\tmodalCloseBtn.addEventListener('click', () => closeModal(modalSelector));\r\n\t  \t}\r\n\r\n\t\t//создадим функцию, позволяющую закрывать окно через esc или щелчком на пустое пространство\t\r\n\t\tmodal.addEventListener('click', (e) => {\r\n\t\t\t//e - объект события\r\n\t\t\t//если место куда кликнул пользователь будет совпадать c modal\r\n\t\t\tif (e.target === modal) {\r\n\t\t\t\t//вызываем функцию для повторяющейся части кода\r\n\t\t\t\tcloseModal(modalSelector);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//пропишем событие keydown, которое происходит когда нажимается кнопка\r\n\t\tdocument.addEventListener('keydown', (e) => {\r\n\t\t\t//отслеживаем код конкретной клавиши\r\n\t\t\t//задаем условие, чтобы событие срабатывало только на открытом окне\r\n\t\t\tif (e.code === 'Escape' && modal.classList.contains('show')) {\r\n\t\t\t\tcloseModal(modalSelector);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Реализуем задачу по вызову модального окна при долистывании до конца страницы\r\n\r\n\t\t//создадим функцию, чтобы окно появлялось только 1 раз, а не при каждом долистывании\r\n\t\tfunction showModalByScroll() {\r\n\t\t\tif (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n\t\t\t\topenModal(modalSelector, modalTimerId);\r\n\t\t\t\t//чтобы удалить обработчик событий, нужно делать ссылку на функцию\r\n\t\t\t\t//которая исполнялась как этот обработчик\r\n\t\t\t\twindow.removeEventListener('scroll', showModalByScroll);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.addEventListener('scroll', showModalByScroll);\r\n\t}\r\n\r\n\t//экспортируем эту функцию в стандартах ES6\r\n\texport default modal;\r\n\t//сделаем 2 именнованых экспорта\r\n\texport { closeModal };\r\n\texport { openModal };","\t//Slider\r\n\t//container - это переменная slider\r\n\t//slide - это переменная slides\r\n\tfunction slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter}) {\r\n\t\t//создаем переменные, которые будут получаться со страницы\r\n\t//слайды по классу\r\n\tconst slides = document.querySelectorAll(slide),\r\n\t//переменная для модификации слайдера, чтобы прописать слайдеру position relative \r\n\tslider = document.querySelector(container),\r\n\t//стрелка previous\r\n\tprev = document.querySelector(prevArrow),\r\n\t//стрелка next\r\n\tnext = document.querySelector(nextArrow),\r\n\t//номер слайдера\r\n\ttotal = document.querySelector(totalCounter),\r\n\t//блок, отображающий текущий слайд\r\n\tcurrent = document.querySelector(currentCounter);\r\n//index, определяющий текущее положение в слайдере с начальным положением 1\r\nlet slideIndex = 1;\r\n\r\n//проинициализируем наш слайдер, поместив вовнутрь начальное значение\r\nshowSlides(slideIndex);\r\n\r\n//если количество слайдов меньше 10, то добавим 0 перед числом\r\nif (slides.length < 10) {\r\n\ttotal.textContent = `0${slides.length}`;\r\n} else {\r\n\ttotal.textContent = slides.length;\r\n}\r\n\r\n//функция по отображению и скрытию слайдера, принимающую slideIndex в качестве аргумента\r\nfunction showSlides(n) {\r\n\t//условия для граничных значений слайдера\r\n\tif (n > slides.length) {\r\n\t\t//перемещаемся в самое начало, если переместились в самую правую границу\r\n\t\tslideIndex = 1\r\n\t}\r\n\t//похожая операция, но в обратную сторону\r\n\tif (n < 1) {\r\n\t\tslideIndex = slides.length;\r\n\t}\r\n\t//обращаемся ко всем слайдам в слайдере\r\n\tslides.forEach(item => item.style.display = 'none');\r\n\t//покажем нужный слайд. Так как первый слайд под индексом 0, то ставим -1\r\n\tslides[slideIndex - 1].style.display = 'block'\r\n\r\n\t//нумерация для текущего слайда\r\n\t//если количество слайдов меньше 10, то добавим 0 перед числом\r\n\tif (slides.length < 10) {\r\n\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t} else {\r\n\t\tcurrent.textContent = slideIndex;\r\n\t}\r\n}\r\n\r\n//модификация слайдера\r\n//все элементы внутри слайдера, спозиционированные абсолютно, будут нормально отображаться\r\nslider.style.position = 'relative';\r\n//создаем обертку для всех точек и стилизуем ее\r\nconst indicators = document.createElement('ol'),\r\n\tdots = [];\r\nindicators.classList.add('carousel-indicators');\r\n//стилизуем\r\nindicators.style.cssText = `\r\n\t\tposition: absolute;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\tz-index: 15;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tmargin-right: 15%;\r\n\t\tmargin-left: 15%;\r\n\t\tlist-style: none;\r\n\t`;\r\n//поместим обертку вовнутрь слайдера\r\nslider.append(indicators);\r\n//создадим определенное количество точек при помощи цикла\r\n//цикл закончится после того как закончатся слайды\r\nfor (let i = 0; i < slides.length; i++) {\r\n\t//создаем точки\r\n\tconst dot = document.createElement('li');\r\n\t//каждой точке присвоим атрибут data-slide-to и установим нумерацию с 1\r\n\tdot.setAttribute('data-slide-to', i + 1);\r\n\t//стилизуем\r\n\tdot.style.cssText = `\r\n\t\t\tbox-sizing: content-box;\r\n\t\t\tflex: 0 1 auto;\r\n\t\t\twidth: 30px;\r\n\t\t\theight: 6px;\r\n\t\t\tmargin-right: 3px;\r\n\t\t\tmargin-left: 3px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tbackground-clip: padding-box;\r\n\t\t\tborder-top: 10px solid transparent;\r\n\t\t\tborder-bottom: 10px solid transparent;\r\n\t\t\topacity: .5;\r\n\t\t\ttransition: opacity .6s ease;\r\n\t\t`;\r\n\t//пропишем прозрачность для активной точки\r\n\tif (i == 0) {\r\n\t\tdot.style.opacity = 1;\r\n\t}\r\n\tindicators.append(dot);\r\n\tdots.push(dot);\r\n}\r\n\r\n//функция, увеличивающая или уменьшающая slideIndex при перелистывании\r\nfunction plusSlides(n) {\r\n\tshowSlides(slideIndex += n);\r\n}\r\n//работаем с точками, чтобы переключать подсветку при переключении слайдера\r\n//задаем начальные стили для точек. Поместим их в функцию, так как участок кода будет повторяться\r\n//модификация слайдера\r\nfunction setDotOpacity() {\r\n\t// Устанавливаем прозрачность для всех точек\r\n\tdots.forEach(dot => dot.style.opacity = '.5');\r\n\t// Устанавливаем прозрачность для текущей точки\r\n\tdots[slideIndex - 1].style.opacity = 1;\r\n}\r\nprev.addEventListener('click', () => {\r\n\tplusSlides(-1);\r\n\t//модификация слайдера\r\n\t// Вызываем функцию для установки прозрачности точек\r\n\tsetDotOpacity();\r\n});\r\nnext.addEventListener('click', () => {\r\n\tplusSlides(+1);\r\n\t//модификация слайдера\r\n\t//работаем с точками, чтобы переключать подсветку при переключении слайдера\r\n\t//задаем начальные стили для точек\r\n\tsetDotOpacity();\r\n});\r\n//модификация слайдера\r\n//сделаем возможным переключение слайдеров по точкам\r\ndots.forEach(dot => {\r\n\tdot.addEventListener('click', (e) => {\r\n\t\t// Получаем атрибут data-slide-to\r\n\t\tconst slideTo = parseInt(e.target.getAttribute('data-slide-to'));\r\n\t\t// Устанавливаем slideIndex равным номеру слайда, на который нажали\r\n\t\tslideIndex = slideTo;\r\n\t\t// Отображаем соответствующий слайд\r\n\t\tshowSlides(slideIndex);\r\n\t\t// Обновляем стили для точек\r\n\t\tsetDotOpacity();\r\n\t});\r\n});\r\n\r\n\t}\r\n\t\r\n\t//экспортируем эту функцию в стандартах ES6\r\n\texport default slider;","//TABS\r\n//создадим функцию для вызова этого модуля в нужный момент\r\nfunction tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n\t\t//в начале скриптов получаем переменные, с которыми будем взаимодействовать\r\n\t\t//1 - табы, на которые будем кликать\r\n\tlet tabs = document.querySelectorAll(tabsSelector),\r\n\t\t//2 - весь контент, который будет находиться в верстке\r\n\t\ttabsContent = document.querySelectorAll(tabsContentSelector),\r\n\t\t//3 - родитель, содержащий все табы\r\n\t\ttabsParent = document.querySelector(tabsParentSelector);\r\n\r\n\t//скроем все ненужные табы\r\n\tfunction hideTabContent() {\r\n\t\t//так как у нас псевдомассив, то мы должны его перебрать\r\n\t\t//один класс добавляем, а другой удаляем\r\n\t\ttabsContent.forEach(item => {\r\n\t\t\t//класс faid отвечает за анимацию переключения\r\n\t\t\titem.classList.add('hide');\r\n\t\t\titem.classList.remove('show', 'fade');\r\n\t\t});\r\n\r\n\t\t//работаем с классом активности. Точку не ставим, так как у нас classList\r\n\t\ttabs.forEach(item => {\r\n\t\t\titem.classList.remove(activeClass);\r\n\t\t});\r\n\t}\r\n\r\n\t//создадим функцию, которая будет показывать табы\r\n\tfunction showTabContent(i = 0) {\r\n\t\t//обращаемся к конкретному элементу\r\n\t\ttabsContent[i].classList.add('show', 'fade');\r\n\t\ttabsContent[i].classList.remove('hide');\r\n\t\ttabs[i].classList.add(activeClass);\r\n\t}\r\n\r\n\t//вызываем функцию\r\n\thideTabContent();\r\n\t//если функция без аргумента, то по умолчанию i = 0\r\n\tshowTabContent();\r\n\r\n\ttabsParent.addEventListener('click', function (event) {\r\n\t\t//event target определим в определенную переменную, так как будем применять его часто\r\n\t\tconst target = event.target;\r\n\t\t//при помощи contains определяем, что мы точно кликнули в tab\r\n\t\t//подставим tabsSelector и удалим точку от нашей строки\r\n\t\t//slice(1) формирует новую строку без первого символа. Мы это делаем потому, что в файле script.js .tabheader__item с точкой, так как это класс, а мы используем значение с таким же названием\r\n\t\tif (target && target.classList.contains(tabsSelector.slice(1))) {\r\n\t\t\t//item - это tab\r\n\t\t\t//i - номер по порядку\r\n\t\t\ttabs.forEach((item, i) => {\r\n\t\t\t\tif (target == item) {\r\n\t\t\t\t\t//вызываем обе функции, так как когда мы переключаем табы нам нужно вскрыть все остальные\r\n\t\t\t\t\t//и показываем тот, который нужен\r\n\t\t\t\t\t//например, если кликнули на 3 таб, то остальные скрываем \r\n\t\t\t\t\thideTabContent();\r\n\t\t\t\t\tshowTabContent(i);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\n\r\n//экспортируем эту функцию в стандартах ES6\r\nexport default tabs;","//TIMER\r\n\t//аргументы в функции позволят менять данные динамически вместо переменной const deadline\r\nfunction timer(id, deadline) {\r\n\t//Создадим функцию, которая будет получать разницу\r\n\t//между deadline и текущей датой\r\n\tfunction getTimeRemaining(endtime) {\r\n\t\t//чтобы вывести нули вместо таймера, если время истекло, выполним проверку\r\n\t\tlet days, hours, minutes, seconds;\r\n\t\t//техническая переменная, в которой превратим дату в числовое значение\r\n\t\tconst t = Date.parse(endtime) - Date.parse(new Date());\r\n\t\tif (t <= 0) {\r\n\t\t\tdays = 0;\r\n\t\t\thours = 0;\r\n\t\t\tminutes = 0;\r\n\t\t\tseconds = 0;\r\n\t\t} else {\r\n\t\t\t//объявим переменные, которые будут отсекать дни, часы, минуты и секунды, округляя результат\r\n\t\t\t//округляем результат деления t на кол-во мс в сутках \r\n\t\t\tdays = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n\t\t\t\t//аналогично находим часы, с условием что их будет не больше 23 \r\n\t\t\t\thours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n\t\t\t\tminutes = Math.floor((t / 1000 / 60) % 60),\r\n\t\t\t\tseconds = Math.floor((t / 1000) % 60);\r\n\t\t}\r\n\t\t//возвращаем объект\r\n\t\treturn {\r\n\t\t\t'total': t,\r\n\t\t\t'days': days,\r\n\t\t\t'hours': hours,\r\n\t\t\t'minutes': minutes,\r\n\t\t\t'seconds': seconds\r\n\t\t};\r\n\t}\r\n\r\n\t//создадим функцию, которая будет добавлять 0 перед число, если оно однозначное\r\n\tfunction getZero(num) {\r\n\t\tif (num >= 0 && num < 10) {\r\n\t\t\treturn `0${num}`;\r\n\t\t} else {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t}\r\n\r\n\t//Создадим функцию, которая устанавливает таймер на страницу\r\n\tfunction setClock(selector, endtime) {\r\n\t\tconst timer = document.querySelector(selector),\r\n\t\t\tdays = timer.querySelector('#days'),\r\n\t\t\thours = timer.querySelector('#hours'),\r\n\t\t\tminutes = timer.querySelector('#minutes'),\r\n\t\t\tseconds = timer.querySelector('#seconds'),\r\n\t\t\t//обновляем таймер каждую секунду\r\n\t\t\ttimeInterval = setInterval(updateClock, 1000);\r\n\t\t//чтобы убрать мигание верстки запустим функцию раньше\r\n\t\tupdateClock();\r\n\t\t//создадим функцию, обновляющую время\r\n\t\tfunction updateClock() {\r\n\t\t\t//расчет времени на текущий момент\r\n\t\t\tconst t = getTimeRemaining(endtime);\r\n\t\t\t//помещаем расчетные велечины на страницу\r\n\t\t\tdays.innerHTML = getZero(t.days);\r\n\t\t\thours.innerHTML = getZero(t.hours);\r\n\t\t\tminutes.innerHTML = getZero(t.minutes);\r\n\t\t\tseconds.innerHTML = getZero(t.seconds);\r\n\t\t\t//используем результат переменной t\r\n\t\t\t//если время вышло, то таймер очищается\r\n\t\t\tif (t.total <= 0) {\r\n\t\t\t\tclearInterval(timeInterval);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//вызываем функцию с селектором и переменной\r\n\tsetClock(id, deadline);\r\n\r\n}\r\n\t\r\n\t//экспортируем эту функцию в стандартах ES6\r\n\texport default timer;","\t//создадим переменную отвечающую за постинг данных используя Function expression\r\n\t//она работает с сервером и может пригодится где угодно\r\n\t//При помощи async объявляем, что внутри функции есть асинхронный код.Упрощает работу с ними\r\n\t//await его парный оператор  \r\n\tconst postData = async (url, data) => {\r\n\t\t//fetch возвращает promise\r\n\t\tconst res = await fetch(url, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json'\r\n\t\t\t},\r\n\t\t\t//тело, которое нужно отправлять\r\n\t\t\tbody: data\r\n\t\t});\r\n\t\t//наш код при помощи await дожидается окончания работы promise и только потом возвращает его\r\n\t\treturn await res.json();\r\n\t};\r\n\r\n\tconst getResource = async (url) => {\r\n\t\t//fetch возвращает promise\r\n\t\tconst res = await fetch(url);\r\n\t\t//если выкинет ошибку, то сработает catch\r\n\t\tif (!res.ok) {\r\n\t\t\t//throw выкидывает новую ошибку\r\n\t\t\tthrow new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n\t\t}\r\n\t\t//наш код при помощи await дожидается окончания работы promise и только потом возвращает его\r\n\t\treturn await res.json();\r\n\t};\r\n\r\n\t//экспортируем функции, чтобы иметь возможность использовать их где угодно в проекте\r\n\texport {postData};\r\n\texport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//подключим bandle.js в основной файл\r\n\t//объеденим все файлы импортировав их в главный\r\n\t//создаем переменные для модулей, указывая путь к ним в стандартах ES6\r\n\t//подключаем их до обработчика событий 'DOMContentLoaded'. Порядок подключения не важен\r\n\timport tabs from './modules/tabs';\r\n\timport modal from './modules/modal';\r\n\timport timer from './modules/timer';\r\n\timport cards from './modules/cards';\r\n\timport calculator from './modules/calculator';\r\n\timport forms from './modules/forms';\r\n\timport slider from './modules/slider';\r\n\timport {openModal} from './modules/modal';\r\n//назначим главный обработчик событий\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\t\t//Реализуем задачу по вызову модального окна через определенный промежуток времени\r\n\t\t//1000mc = 1c\r\n\t\t//запустим стрелочную функцию, которая запустит функцию openModal внутри себя череззаданный промежуток времени\r\n\t\tconst modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 300000);\r\n\r\n\t//вызываем функции\r\n\t//подставим аргументы tabsSelector, tabsContentSelector, tabsParentSelector, activeClass\r\n\ttabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n\t//подставим аргументы из переменных modalTrigger и modal\r\n\t//triggerSelector - Селектор для элементов, которые будут открывать модальное окно.\r\n\t//modalSelector - Селектор для самого модального окна.\r\n\t//modalTimerId - Идентификатор таймера, который используется для автоматического открытия модального окна через определенное время.\r\n\tmodal('[data-modal]', '.modal', modalTimerId);\r\n\t//в качестве аргументов устанавливаем селектор таймера и дату\r\n\ttimer('.timer', '2025-05-20');\r\n\tcards();\r\n\tcalculator();\r\n\t//modalTimerId - Идентификатор таймера, который может использоваться для управления временем открытия модального окна.\r\n\tforms('form', modalTimerId);\r\n\t//передаем объект, содержащий настройки, которые деструктуризируются в файле slider.js\r\n\t//порядок аргументов в объекте не важен\r\n\tslider({\r\n\t\tcontainer: '.offer__slider',\r\n\t\tnextArrow: '.offer__slider-next',\r\n\t\tslide: '.offer__slide',\r\n\t\tprevArrow: '.offer__slider-prev',\r\n\t\ttotalCounter: '#total',\r\n\t\tcurrentCounter: '#current'\r\n\t}); \t\t\r\n});\r\n//сборщик webpack запускаем прописав в терминале npx webpack\r\n//добавить второй терминал можно нажав на +\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}